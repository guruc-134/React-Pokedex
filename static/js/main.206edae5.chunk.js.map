{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","pokemon","name","src","image","type","CardList","pokemons","map","id","SearchBox","placeholder","handleChange","onChange","App","e","setState","searchField","target","value","state","promises","i","url","push","fetch","then","res","json","catch","err","console","log","Promise","all","results","data","undefined","types","join","fetchpokemon","this","filteredPokemons","filter","toLowerCase","includes","height","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAEaA,EAAO,SAACC,GAAD,OAEhB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAKF,EAAMG,QAAQC,KAAMC,IAAKL,EAAMG,QAAQG,MAAOL,UAAU,cAClE,6BAAKD,EAAMG,QAAQC,OACnB,6BACKJ,EAAMG,QAAQI,WCJdC,G,MAAW,SAACR,GAAD,OAEpB,qBAAKC,UAAU,YAAf,SAEID,EAAMS,SAASC,KAAI,SAAAP,GAAO,OAAI,cAAC,EAAD,CAAwBA,QAAUA,GAAtBA,EAAQQ,WCJ7CC,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAYC,EAAf,EAAeA,aAAf,OAGrB,uBACAb,UAAU,SACVM,KAAK,SACLM,YAAaA,EACbE,SAAUD,MC0ECE,G,wDA9Eb,aACC,IAAD,8BACE,gBAqDFF,aAAa,SAACG,GAEZ,EAAKC,SAAU,CAAEC,YAAYF,EAAEG,OAAOC,SArDtC,EAAKC,MACL,CACEb,SAAW,GACXU,YAAc,IANlB,E,qDASA,WACC,IAAD,QACqB,WAMf,IAFA,IAAMI,EAAW,GAHrB,WAKaC,GAEP,IAAMC,EAAI,qCAAD,OAAsCD,GAC/CD,EAASG,KAAMC,MAAMF,GACpBG,MAAK,SAAAC,GAAG,OAAGA,EAAIC,UACfC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAR,8BAAmCV,EAAnC,wBALPA,EAAE,EAAEA,GAAG,IAAIA,IACnB,EADQA,GAQT,IAAIrB,EAAS,GACbgC,QAAQC,IAAIb,GAAUK,MAAK,SAAAS,GAEzBJ,QAAQC,IAAIG,GACVlC,EAAQ,GAFZ,oBAGqBkC,GAHrB,IAGI,2BACA,CAAC,IADQC,EACT,aACcC,IAATD,QAAoCC,IAAdD,EAAKE,OAC9BrC,EAAQuB,KAAK,CACXtB,KAAKkC,EAAKlC,KACVO,GAAG2B,EAAK3B,GACRL,MAAM,iDAAD,OAAkDgC,EAAK3B,GAAvD,QACLJ,KAAK+B,EAAKE,MAAM9B,KAAI,SAACH,GAAD,OAAUA,EAAKA,KAAKH,QAAMqC,KAAK,SAV3D,8BAqBI,EAAKvB,SAAS,CAAET,SAASN,OAGjCuC,K,oBAOF,WACA,MAEoCC,KAAKrB,MAA/Bb,EAFV,EAEUA,SAAUU,EAFpB,EAEoBA,YACZyB,EAAoBnC,EAASoC,QAAQ,SAAA1C,GAAO,OAClDA,EAAQC,KAAK0C,cAAcC,SAAS5B,EAAY2B,kBAChD,OACE,sBAAK7C,UAAU,MAAf,UACE,qBAAKA,UAAU,gBAAgBI,IAAI,gEAAgEH,IAAI,eAAe8C,OAAO,SAC7H,uBACA,cAAC,EAAD,CACEnC,YAAc,oBACdC,aAAgB6B,KAAK7B,eACvB,cAAC,EAAD,CAAUL,SAAUmC,W,GA1EVK,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.206edae5.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css'\r\nexport const Card = (props) =>\r\n(\r\n    <div className='card-container'>\r\n        <img alt={props.pokemon.name} src={props.pokemon.image} className='cardImage'></img>\r\n        <h1>{props.pokemon.name}</h1>\r\n        <h2>\r\n            {props.pokemon.type}\r\n        </h2>\r\n    </div> \r\n) ","import { React } from \"react\";\r\nimport {Card} from '../card/card.component';\r\n\r\nimport './card-list.styles.css'\r\nexport const CardList = (props) =>\r\n(\r\n    <div className='card-list'>\r\n    {\r\n        props.pokemons.map(pokemon => <Card key ={pokemon.id} pokemon= {pokemon} />)\r\n    }\r\n    </div>\r\n    \r\n)","import React from 'react'\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder,handleChange }) =>\r\n(\r\n    \r\n    <input \r\n    className='search'\r\n    type='search'\r\n    placeholder={placeholder}\r\n    onChange={handleChange}/>\r\n)","import  React , { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport './App.css';\n\nclass App extends Component\n{\n  constructor()\n  {\n    super();\n\n    this.state=\n    {\n      pokemons : [],\n      searchField : \"\"\n    }; \n  }\n  componentDidMount()\n  {\n    const fetchpokemon=()=>\n    {\n\n        // array for storing all the 150 promises inorder to perform parallel async fetch to save time\n        const promises = [] ;\n        //  max value 898\n        for( let i=1;i<=200;i++)\n        {\n          const url=`https://pokeapi.co/api/v2/pokemon/${i}`;\n          promises.push( fetch(url)\n          .then(res =>res.json() )\n          .catch(err => console.log(`the image at the id ${i} was not found`)) )\n        }\n        // all the promises are pushed into an array and once all of them are resolved then our details are collected\n        var pokemon= []\n        Promise.all(promises).then(results =>\n        {\n          console.log(results)\n            pokemon=[]\n            for (let data of results)\n            {\n              if(data === undefined || data.types=== undefined) continue;\n              pokemon.push({\n                name:data.name,\n                id:data.id,\n                image:`https://pokeres.bastionbot.org/images/pokemon/${data.id}.png`,\n                type:data.types.map((type) => type.type.name).join(', ')\n              }\n              )\n            }\n              // pokemon= results.map((data) => (\n              // {\n              //   name:data.name,\n              //   id:data.id,\n              //   image:`https://pokeres.bastionbot.org/images/pokemon/${data.id}.png`,\n              //   type:data.types.map((type) => type.type.name).join(', ')\n              // }));\n            this.setState({ pokemons:pokemon})\n          });      \n    };\n    fetchpokemon()\n  }\n\n  handleChange=(e)=>\n  {\n    this.setState( { searchField:e.target.value})\n  }\n  render()\n  {\n    // console.log(this.state.pokemons)\n    const { pokemons, searchField } = this.state;\n    const filteredPokemons =  pokemons.filter( pokemon => \n    pokemon.name.toLowerCase().includes(searchField.toLowerCase()) )\n    return (\n      <div className=\"App\">\n        <img className='image_heading' src='https://cdn.bulbagarden.net/upload/4/4b/Pok%C3%A9dex_logo.png' alt='pokemon logo' height='50px'/>\n        <br/>\n        <SearchBox\n          placeholder = '  search pokemons'\n          handleChange = {this.handleChange} />\n        <CardList pokemons={filteredPokemons}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}